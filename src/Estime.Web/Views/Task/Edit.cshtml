@model Estime.Web.ViewModels.TaskInput

@using(Html.BeginForm("Edit", "Task"))
{
	<div class="container_4">
		<div class="grid_1">
			<div class="editor-label">
				@Html.LabelFor(m => m.ConsultantId)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(m => m.ConsultantId, (SelectList) ViewBag.Consultants, "Vælg konsulent")
				@Html.ValidationMessageFor(m => m.ConsultantId)
			</div>
		</div>

		<div class="grid_3">
			<div class="editor-label">
				@Html.LabelFor(m => m.ProjectId)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(m => m.ProjectId, (SelectList) ViewBag.Clients, "Vælg kunde/projekt")
				@Html.ValidationMessageFor(m => m.ProjectId)
			</div>
		</div>

		<div class="grid_1">
			<div class="editor-label">
				@Html.LabelFor(m => m.Timestamp)
			</div>
			<div class="editor-field">
				<input id="Timestamp" name="Timestamp" type="text" value="@Model.Timestamp.ToString("yyyy-MM-dd")"/>
				@Html.ValidationMessageFor(m => m.Timestamp)
			</div>
		</div>
		<div class="grid_3">
			<div class="editor-label">
				@Html.LabelFor(m => m.DurationInMinutes)
			</div>
			<div class="editor-field">
				@Html.EditorFor(x => x.DurationInMinutes, "Duration")
			</div>
		</div>

		<div class="grid_2">
			<div class="editor-label">
				@Html.LabelFor(m => m.Description)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(m => m.Description, new {style = "width: 430px; height: 75px;"})
			</div>
		</div>
		<div class="grid_2">
			<div class="editor-label">
				&nbsp;
			</div>
			<div class="editor-field">
				@Html.CheckBoxFor(m => m.Mileage)
				@Html.LabelFor(m => m.Mileage)
			</div>
			<div id="projectStatus" class="editor-field">
				@Html.CheckBoxFor(m => m.Closed)
				@Html.LabelFor(m => m.Closed)
			</div>
		</div>

		<div class="grid_4">
			<div class="editor-label">
				@Html.LabelFor(m => m.Wares)
			</div>
			<div class="editor-field">
				<input type="text" id="wareQuantity" name="wareQuantity" style="width: 40px;" />
				@Html.DropDownList("ware", (SelectList) ViewBag.Wares, "Vælg hardware/software")
				<input type="text" id="warePrice" name="warePrice" style="width: 40px;" />

				<button type="button" onclick=" $wares.add(); return false; ">Tilføj</button>
				<button type="button" onclick=" $wares.remove(); return false; ">Fjern</button>
				<button type="button" onclick=" $wares.clear(); return false; ">Ryd</button>
			</div>
			<div class="editor-field">
				@Html.ListBox("wareList", Model.Wares, new {style = "width: 435px; height: 75px;"})
				@Html.TextBoxFor(x => x.SelectedWares)
			</div>
		</div>

		<div class="grid_4">
			<div class="editor-field">
				<button type="submit">Gem</button>
				<a href="@Url.Action("Delete", "Task", new {Model.Id})" onclick=" return confirm('Er du sikker?'); ">Slet</a>
			</div>
		</div>
		<div class="clearfix"></div>
	</div>
}

@section AdditionalScripts
{
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.js")"> </script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"> </script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.8.17.js")"> </script>
	<script type="text/javascript" src="@Url.Content("~/js/jquery-ui-datapicker-i18n.js")"></script>

	<script type="text/javascript">

		$wares = (function($, w) {
			var list = @Html.Raw(ViewBag.WareList);

			function buildArray() {
				var values = [];
				var $wareList = $('#wareList');
				$wareList.empty();

				for (var id in list) {
					values.push(id + '|' + list[id].quantity + '|' + list[id].price);
					var html = $('<option value=' + id + '></option>').text(list[id].quantity + 'x ' + list[id].name + ' (' + list[id].price + ')');
					$wareList.append(html);
				}
				$('#SelectedWares').val(values.join('¤'));
			}

			function confirm() {
				return w.confirm('Er du sikker?');
			}

			return {
				add: function() {
					var $wareQuantity = $('#wareQuantity');
					var $warePrice = $('#warePrice');
					var $ware = $("#ware option:selected");

					var quantity = parseInt($wareQuantity.val(), 10);
					if (isNaN(quantity)) {
						quantity = 1;
					}
					var price = parseFloat($warePrice.val().replace(',', '.'));
					if (isNaN(price)) {
						price = 0;
					}
					var id = $ware.val();
					var name = $ware.text();

					if (id !== undefined && id.length > 0) {
						if (quantity === 0) {
							delete list[id];
						} else {
							list[id] = { quantity: quantity, name: name, price: price };

							$wareQuantity.val('');
							$warePrice.val('');
							$ware.removeAttr('selected');
							$('#ware option:first').attr('selected', 'selected');
						}
					}
					buildArray();
				},
				remove: function() {
					var selected = $('#wareList').find('option:selected');
					if (selected.length > 0 && confirm()) {
						delete list[selected.val()];
						selected.remove();
						buildArray();
					}
				},
				clear: function() {
					var selected = $('#wareList').find('option');
					if (selected.length > 0 && confirm()) {
						list = { };
						buildArray();
					}
				},
				init: function() {
					buildArray();
				}
			};
		})(jQuery, window);

		(function($) {
			var projectStatusHash = @Html.Raw(ViewBag.ProjectStatusHash);

			$(function() {
				$wares.init();
				$('#Timestamp').datepicker();
				$('#ProjectId').change(function() {
					var projectId = $('option:selected', this).val();

					if (projectId.length > 0) {
						var enabled = projectStatusHash[projectId];
						$('#Closed').attr('checked', !enabled);
						@if( Model.Id==Guid.Empty )
						{
							<text>
							if( enabled===true )
							{
								$('#projectStatus').show();
							}
							else
							{
								$('#projectStatus').hide();
							}
							</text>
						}
					}
				});
			});
		})(jQuery);

	</script>
}